---
import BaseLayout from "./Base.astro";
import { intersperse } from "../lib/utils.ts";
import { Picture } from "astro-imagetools/components";

export interface Props {
  name: string;
  image?: string;
  links: Array<{ name: string; href: string }>;
  read_more?: boolean;
  timespan: string;
  ordering_value: number;
  tags: Array<string>;
  description: string;
  archived: boolean;
}
const props = Astro.props.content as Props;
---

<BaseLayout title={props.name} summary={props.description}>
  <div class="wrapper">
    {
      props.image ? (
        <div class="banner">
          <Picture
            src={props.image}
            alt="Cover image"
            format={["webp"]}
            loading="eager"
            layout="fill"
            sizes="(min-width: 48.6em ) 48.6em, 100vw"
          />
          <h1>{props.name}</h1>
        </div>
      ) : (
        <h1>{props.name}</h1>
      )
    }
    <main>
      <p class="noprint">
        <a href={props.archived ? "/archive" : "/"}
          >&larr; back to {props.archived ? "archive" : "homepage"}</a
        >
      </p>
      <p class="metadata">
        Tags: <span class="tags">
          {
            intersperse(
              props.tags.map((tag) => <span>{tag}</span>),
              ", "
            )
          }
        </span>
      </p>
      <p class="metadata">Timespan: {props.timespan}</p>
      <p class="metadata">
        {
          intersperse(
            props.links.map(({ name, href }) => (
              <a target="_blank" href={href}>
                {name}
              </a>
            )),
            " | "
          )
        }
      </p>
      {props.description.split(/\n\w*\n/).map((p) => <p>{p}</p>)}
      <slot />
    </main>
    <footer>
      <p>
        <small>
          Powered by <a href="https://astro.build/">Astro</a>; Hosted on GitHub
          Pages
        </small>
      </p>
    </footer>
  </div>
</BaseLayout>

<style lang="scss">
  @use "../lib/tags.scss";
  .wrapper {
    max-width: 50em;
    margin: 0 auto;
  }
  .banner {
    margin: calc(-1 * var(--outer-top-margin)) calc(-1 * var(--outer-margin))
      1em;
    height: min(50vh, 20em);
    position: relative;

    h1 {
      position: absolute;
      z-index: 5;
      left: 50%;
      top: 55%;
      transform: translate(-50%, -50%);
      background-color: var(--bg-lightly-transparent);
      color: var(--fg-high-contrast);
      font-variant: small-caps;
      padding: 0.6em 1em;
      border-radius: 0.1em;
      text-align: center;
    }
  }

  main > :global(p > img) {
    max-width: 100%;
  }

  .metadata {
    font-size: 1.15em;
  }
  .tags {
    @include tags.tags(4);
  }
</style>
